name: Rust Windows CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    name: Build and Test
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x86_64-pc-windows-msvc, i686-pc-windows-msvc]
    
    steps:
    - uses: actions/checkout@v4
    
    # 使用正确的 Rust 安装方式
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        targets: ${{ matrix.target }}
    
    - name: Cache cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Build (Debug)
      run: cargo build --verbose
    
    - name: Build (Release)
      run: cargo build --release --verbose
      
    - name: Run Tests
      run: cargo test --verbose
      
    - name: Run Integration Tests
      run: cargo test --release --verbose
      
    - name: Upload Release Artifacts
      if: matrix.target == 'x86_64-pc-windows-msvc'
      uses: actions/upload-artifact@v4
      with:
        name: release-binaries
        path: |
          target/release/windows-rust-example.exe
          target/release/build/
